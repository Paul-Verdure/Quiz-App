{"version":3,"sources":["FlashCard.js","FlashCardList.js","App.js","index.js"],"names":["FlashCard","flashcard","useState","flip","setFlip","height","setHeight","frontEl","useRef","backEl","setMaxHeight","frontHeight","current","getBoundingClientRect","backHeight","Math","max","useEffect","question","answer","options","window","addEventListener","removeEventListener","className","style","onClick","ref","map","option","FlashCardList","flashcards","id","App","setFlashcards","categories","setCategories","categoryEl","amountEl","difficultyEl","decodeString","str","textArea","document","createElement","innerHTML","value","axios","get","then","res","data","trivia_categories","onSubmit","e","preventDefault","params","amount","category","difficulty","results","questionItem","index","correct_answer","incorrect_answers","a","Date","now","sort","random","htmlFor","name","type","min","step","defaultValue","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad5867c7.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from 'react'\n\nexport default function FlashCard({flashcard}) {\n    const [flip, setFlip] = useState(false);\n    const [height, setHeight] = useState('initial')\n\n    const frontEl = useRef();\n    const backEl = useRef();\n\n    function setMaxHeight() {\n        const frontHeight =frontEl.current.getBoundingClientRect().height;\n        const backHeight =backEl.current.getBoundingClientRect().height;\n        setHeight(Math.max(frontHeight, backHeight, 100))\n    }\n\n    useEffect(setMaxHeight\n    , [flashcard.question, flashcard.answer, flashcard.options])\n\n    useEffect(()=> {\n        window.addEventListener('resize', setMaxHeight)\n        return () => window.removeEventListener('resize', setMaxHeight)\n    }, [])\n\n    return (\n        <div \n        className={`card ${flip ? 'flip' : ''}`}\n        style={{height: height}}\n        onClick={() => setFlip(!flip)}>\n        <div className=\"front\" ref={frontEl}>\n            {flashcard.question}\n            <div className=\"flashcard-options\">\n                {flashcard.options.map(option => {\n                    return <div className=\"flashcard-option\" key={option}>{option}</div>\n                })}\n            </div>\n        </div>\n        <div className=\"back\" ref={backEl}>{flashcard.answer}</div>\n        \n        </div>\n    )\n}\n","import React from 'react'\nimport FlashCard from './FlashCard'\n\nexport default function FlashCardList( {flashcards }) {\n    return (\n        <div className=\"card-grid\">\n            {flashcards.map(flashcard => {\n                return <FlashCard flashcard={flashcard} key={flashcard.id} />\n            })}\n        </div>\n    )\n}\n","import React, {useState, useEffect, useRef} from \"react\";\nimport FlashCardList from \"./FlashCardList\";\nimport './app.css';\nimport axios from \"axios\";\n\n\nfunction App() {\n  \n  const [flashcards, setFlashcards] = useState([]);\n  const [categories, setCategories] = useState([])\n\n  const categoryEl = useRef();\n  const amountEl = useRef();\n  const difficultyEl = useRef();\n\nuseEffect(() => {\n  axios\n  .get('https://opentdb.com/api_category.php')\n  .then(res => {\n    setCategories(res.data.trivia_categories)\n  })\n}, [])\n\nuseEffect(() => {\n \n\n}, [])\n\nfunction decodeString(str) {\n  const textArea = document.createElement('textarea')\n  textArea.innerHTML = str\n  return textArea.value\n}\n\nfunction handleSubmit(e) {\n  e.preventDefault()\n  axios\n  .get('https://opentdb.com/api.php', {\n    params: {\n      amount: amountEl.current.value,\n      category: categoryEl.current.value,\n      difficulty: difficultyEl.current.value\n    }\n  })\n  .then(res => {\n    setFlashcards(res.data.results.map((questionItem, index) => {\n      const answer = decodeString(questionItem.correct_answer);\n      const options = [\n        ...questionItem.incorrect_answers.map(a => decodeString(a))\n        , answer];\n      return {\n        id: `${index}-${Date.now()}`,\n        question: decodeString(questionItem.question),\n        answer: answer,\n        options: options.sort(() => Math.random() - .5)\n      }\n\n    }))\n\n  })\n}\n\n  return (\n<>\n    <form className=\"header\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n      <label htmlFor=\"category\">Category</label>\n        <select id=\"category\" ref={categoryEl}>\n          {categories.map(category => {\n            return <option value={category.id} key={category.id}>{category.name}</option>\n          })}\n    \n        </select>\n      </div>\n      <div className=\"form-group\">\n      <label htmlFor=\"difficulty\">Category</label>\n      <select id=\"difficulty\" ref={difficultyEl}>\n        <option value=\"easy\">Easy</option>\n        <option value=\"medium\" >Medium</option>\n        <option value=\"hard\" >Hard</option>\n        </select>\n      </div>\n      <div className=\"form-group\">\n      <label htmlFor=\"amount\">Number of questions</label>\n      <input type=\"number\" id=\"amount\" min=\"1\" step=\"1\" defaultValue={10} ref={amountEl} />\n        </div>\n        <div className=\"form-group\">\n         <button  className=\"btn\">Generate</button>\n         \n          </div>   \n    </form>\n      <div className=\"container\">\n    <FlashCardList flashcards={flashcards}/>\n    </div>\n    </>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}